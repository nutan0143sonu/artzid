# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-08-21 08:18
from __future__ import unicode_literals

import app.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djrichtextfield.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('social_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Social id')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('user_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='User Name')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True, verbose_name='Gender')),
                ('age', models.CharField(blank=True, max_length=50, null=True, verbose_name='Age')),
                ('user_type', models.CharField(choices=[('Artist', 'Artist'), ('Professional', 'Professional'), ('Institution', 'Institution')], default='Registered user', max_length=30, verbose_name='user_type')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Country')),
                ('dob', models.CharField(blank=True, max_length=100, null=True, verbose_name='Dob')),
                ('otp', models.CharField(blank=True, max_length=10, null=True, verbose_name='Otp')),
                ('is_otp_verified', models.BooleanField(default=False, verbose_name='Otp Verified')),
                ('image', app.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('is_forgetpassword', models.BooleanField(default=False, verbose_name='Forgot Link Request')),
                ('is_active', models.BooleanField(default=False, verbose_name='Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'User',
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
            ],
            options={
                'verbose_name_plural': 'Activity',
            },
        ),
        migrations.CreateModel(
            name='AddBrand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Endorsed By',
            },
        ),
        migrations.CreateModel(
            name='AddClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.CharField(blank=True, max_length=100, null=True, verbose_name='Client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_client_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Add Client',
            },
        ),
        migrations.CreateModel(
            name='AddMediaInProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Add Media In Project',
            },
        ),
        migrations.CreateModel(
            name='AddMediaInWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Add Media In Work',
            },
        ),
        migrations.CreateModel(
            name='AddTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_team', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_team_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Add Team',
            },
        ),
        migrations.CreateModel(
            name='AddUserProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Past', 'Past')], max_length=100, null=True, verbose_name='Status')),
                ('thumbnail', app.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('image_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Image Title')),
                ('date', models.CharField(blank=True, max_length=100, null=True, verbose_name='Date')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Description')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Country')),
                ('collaborations', models.CharField(blank=True, max_length=100, null=True, verbose_name='Collaborations')),
                ('link', models.URLField(max_length=250, verbose_name='Gallery Link')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_user_project', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Add User Project',
            },
        ),
        migrations.CreateModel(
            name='AddUserService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Add User Service',
            },
        ),
        migrations.CreateModel(
            name='AddUserWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('Available', 'Available'), ('Sold', 'Sold')], max_length=100, null=True, verbose_name='Status')),
                ('thumbnail', app.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('image_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Image Title')),
                ('size', models.CharField(blank=True, max_length=100, null=True, verbose_name='Size')),
                ('medium', models.CharField(blank=True, max_length=255, null=True, verbose_name='Medium')),
                ('year', models.CharField(blank=True, max_length=100, null=True, verbose_name='Year')),
                ('tag', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tag')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_user_work', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Add User Project',
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carrer', models.CharField(blank=True, max_length=100, null=True, verbose_name='Carrer')),
                ('organisation', models.CharField(blank=True, max_length=100, null=True, verbose_name='Organisation ')),
                ('job_type', models.CharField(blank=True, choices=[('Full time artist', 'Full time artist'), ('Another day job', 'Another day job')], max_length=100, null=True, verbose_name='Artist Type')),
                ('contact_email', models.EmailField(max_length=255, verbose_name='Email')),
                ('messenger', models.CharField(blank=True, max_length=100, null=True, verbose_name='Messenger')),
                ('agent_gallery', models.URLField(max_length=250, verbose_name='Agent or Gallery')),
                ('work_image', app.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artist_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Artist',
            },
        ),
        migrations.CreateModel(
            name='ArtistAchievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement', models.CharField(blank=True, max_length=100, null=True, verbose_name='Achievement')),
                ('no', models.CharField(blank=True, max_length=100, null=True, verbose_name='Number')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artist_achievement', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Artist Achievement',
            },
        ),
        migrations.CreateModel(
            name='ArtistAdd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artist', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_artist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Add Artist',
            },
        ),
        migrations.CreateModel(
            name='ArtistExhibitions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exhibitions', models.CharField(blank=True, max_length=100, null=True, verbose_name='Exhibitions')),
                ('no', models.CharField(blank=True, max_length=100, null=True, verbose_name='Number')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artist_exhibition', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Artist Exhibitions',
            },
        ),
        migrations.CreateModel(
            name='ArtistGoal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artist_goal', to='app.Artist')),
            ],
            options={
                'verbose_name_plural': 'Artist Goal',
            },
        ),
        migrations.CreateModel(
            name='ArtistInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artist_interest', to='app.Artist')),
            ],
            options={
                'verbose_name_plural': 'Artist Interest',
            },
        ),
        migrations.CreateModel(
            name='ArtistSales',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sales', models.CharField(blank=True, max_length=100, null=True, verbose_name='Number')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artist_sales', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Artist Sales',
            },
        ),
        migrations.CreateModel(
            name='ArtistUserInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artist_interest_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Artist User Interest',
            },
        ),
        migrations.CreateModel(
            name='ArtistUserSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artist_skill_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Artist User Skill',
            },
        ),
        migrations.CreateModel(
            name='Bio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bio')),
                ('stats_type', models.CharField(blank=True, choices=[('Full Time', 'Full Time'), ('Part Time', 'Part Time')], max_length=100, null=True, verbose_name='Stats Type')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bio_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Bio',
            },
        ),
        migrations.CreateModel(
            name='BioEducation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Bio Education',
            },
        ),
        migrations.CreateModel(
            name='BiographyLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', app.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Biography Link',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Title')),
                ('description', djrichtextfield.models.RichTextField(blank=True, null=True, verbose_name='Description')),
                ('blog_image', app.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='Blog Image')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Blog',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
            ],
            options={
                'verbose_name_plural': 'Brand',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, max_length=300, null=True, verbose_name='Comment')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog', to='app.Blog')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Comment',
            },
        ),
        migrations.CreateModel(
            name='Connect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_connect', models.BooleanField(default=True, verbose_name='Connect')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('connect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_connect', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connect_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Connect',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
            ],
            options={
                'verbose_name_plural': 'Education',
            },
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_follow', models.BooleanField(default=True, verbose_name='Follow')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('to_follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_follow', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follow_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Follow',
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Title')),
                ('image', app.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Gallery',
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
            ],
            options={
                'verbose_name_plural': 'Signup Goal',
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Institution Type ')),
                ('institution_category', models.CharField(blank=True, max_length=100, null=True, verbose_name='Institution Category')),
                ('location', models.CharField(blank=True, max_length=100, null=True, verbose_name='Location')),
                ('logo', app.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='institution_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Institution',
            },
        ),
        migrations.CreateModel(
            name='InstitutionActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity', to='app.Activity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InstitutionInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('information', models.CharField(blank=True, max_length=100, null=True, verbose_name='Information')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='information_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Institution Information',
            },
        ),
        migrations.CreateModel(
            name='InstitutionOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offer_institution', to='app.Institution')),
            ],
            options={
                'verbose_name_plural': 'Institution Offer',
            },
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
            ],
            options={
                'verbose_name_plural': 'Signup Interest',
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', app.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_media', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Media',
            },
        ),
        migrations.CreateModel(
            name='MediaDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filter_type', models.CharField(blank=True, choices=[('Exhibitions', 'Exhibitions'), ('Projects', 'Projects'), ('Press', 'Press')], max_length=100, null=True, verbose_name='Filter Type')),
                ('thumbnail', app.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('image_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Image Title')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Country')),
                ('date', models.CharField(blank=True, max_length=100, null=True, verbose_name='Date')),
                ('gallery_link', models.URLField(max_length=250, verbose_name='Gallery Link')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_media_details', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Media',
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
            ],
            options={
                'verbose_name_plural': 'Signup Offer',
            },
        ),
        migrations.CreateModel(
            name='Photos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Title')),
                ('image', app.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Photo',
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='place_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Place',
            },
        ),
        migrations.CreateModel(
            name='Professional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artistic_profession', models.CharField(blank=True, max_length=100, null=True, verbose_name='Artistic Profession')),
                ('job_type', models.CharField(blank=True, choices=[('Work for', 'Work for'), ('Self employee', 'Self employee')], max_length=100, null=True, verbose_name='Professional Type')),
                ('organisation', models.CharField(blank=True, max_length=100, null=True, verbose_name='Organisation ')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professional_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Professional',
            },
        ),
        migrations.CreateModel(
            name='ProfessionalGoal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goal_professional', to='app.Goal')),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professional_goal', to='app.Professional')),
            ],
            options={
                'verbose_name_plural': 'Professional Goal',
            },
        ),
        migrations.CreateModel(
            name='ProfessionalServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professional_service', to='app.Professional')),
            ],
            options={
                'verbose_name_plural': 'Professional Services',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Title')),
                ('image', app.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('amount', models.CharField(blank=True, max_length=100, null=True, verbose_name='Amount')),
                ('description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Description')),
                ('rules', models.CharField(blank=True, max_length=250, null=True, verbose_name='Rules')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Project',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(default=1, verbose_name='Rating')),
                ('to_rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_rate', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Rating',
            },
        ),
        migrations.CreateModel(
            name='ReviewAndRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.CharField(blank=True, max_length=250, null=True, verbose_name='Review')),
                ('rating', models.IntegerField(default=0, verbose_name='Rating')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('to_rating', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_rating', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_review_rating', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Review And Rating',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
            ],
            options={
                'verbose_name_plural': 'Signup Service',
            },
        ),
        migrations.CreateModel(
            name='Social',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website', models.URLField(max_length=250, verbose_name='Website')),
                ('instagram', models.URLField(max_length=250, verbose_name='Instagram')),
                ('facebook', models.URLField(max_length=250, verbose_name='Facebook')),
                ('youtube', models.URLField(max_length=250, verbose_name='Youtube')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Social',
            },
        ),
        migrations.CreateModel(
            name='UserInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
            ],
            options={
                'verbose_name_plural': 'User Interest',
            },
        ),
        migrations.CreateModel(
            name='UserProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.CharField(blank=True, max_length=100, null=True, verbose_name='Project')),
                ('no', models.CharField(blank=True, max_length=100, null=True, verbose_name='Number')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_project', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Project',
            },
        ),
        migrations.CreateModel(
            name='UserService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
            ],
            options={
                'verbose_name_plural': 'User Services',
            },
        ),
        migrations.CreateModel(
            name='UserSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
            ],
            options={
                'verbose_name_plural': 'User Skill',
            },
        ),
        migrations.CreateModel(
            name='VideoAndImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', app.models.CloudinaryField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Video And Image',
            },
        ),
        migrations.AddField(
            model_name='professionalservices',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service', to='app.Service'),
        ),
        migrations.AddField(
            model_name='institutionoffer',
            name='offer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offer', to='app.Offer'),
        ),
        migrations.AddField(
            model_name='bioeducation',
            name='education',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education', to='app.Education'),
        ),
        migrations.AddField(
            model_name='bioeducation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bio_education_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='artistuserskill',
            name='user_skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_skill', to='app.UserSkill'),
        ),
        migrations.AddField(
            model_name='artistuserinterest',
            name='user_interest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_interest', to='app.UserInterest'),
        ),
        migrations.AddField(
            model_name='artistinterest',
            name='interest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interest', to='app.Interest'),
        ),
        migrations.AddField(
            model_name='artistgoal',
            name='goal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goal', to='app.Goal'),
        ),
        migrations.AddField(
            model_name='adduserservice',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_service', to='app.UserService'),
        ),
        migrations.AddField(
            model_name='adduserservice',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_user_service', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='addmediainwork',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_image_work', to='app.VideoAndImage'),
        ),
        migrations.AddField(
            model_name='addmediainwork',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_add_media_work', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='addmediainproject',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_image_project', to='app.VideoAndImage'),
        ),
        migrations.AddField(
            model_name='addmediainproject',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_add_media_projecct', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='addbrand',
            name='brand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_brand', to='app.Brand'),
        ),
        migrations.AddField(
            model_name='addbrand',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_brand_user', to=settings.AUTH_USER_MODEL),
        ),
    ]
